{"version":3,"file":"static/js/7633.69f4e5d4.chunk.js","mappings":"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","sources":["../node_modules/@tsparticles/engine/browser/Core/Canvas.js","../node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js","../node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Point.js","../node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js","../node_modules/@tsparticles/engine/browser/Core/Particles.js","../node_modules/@tsparticles/engine/browser/Core/Retina.js","../node_modules/@tsparticles/engine/browser/Core/Container.js"],"sourcesContent":["import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { generatedAttribute } from \"./Utils/Constants.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key], defaultValue = 1;\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    for (const key in style) {\n        const value = style[key];\n        if (!value) {\n            continue;\n        }\n        elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const factorNumerator = 1, opacity = factorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            setStyle(element, originalStyle);\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const radix = 10;\n            setStyle(element, {\n                position: \"fixed\",\n                zIndex: this.container.actualOptions.fullScreen.zIndex.toString(radix),\n                top: \"0\",\n                left: \"0\",\n                width: \"100%\",\n                height: \"100%\",\n            }, true);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill, minimumLength = 0;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return Promise.resolve(undefined);\n        }\n        return cb(ctx);\n    }\n    async drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius(), minimumSize = 0;\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        await this.drawAsync(async (ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactorOffset = 1, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, defaultOpacity = 1, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            await drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    async drawParticlePlugin(plugin, particle, delta) {\n        await this.drawAsync((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    async drawPlugin(plugin, delta) {\n        await this.drawAsync((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        await container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { millisecondsToSeconds, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nconst double = 2;\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                const touchDelay = 500;\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lengthOffset = 1, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect(), defaultCoordinate = 0;\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? defaultCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? defaultCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle, Rectangle } from \"./Ranges.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nconst half = 0.5, double = 2, subdivideCount = 4;\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nimport { errorPrefix } from \"./Utils/Constants.js\";\nconst qTreeCapacity = 4, squareExp = 2, defaultRemoveQuantity = 1;\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize, posOffset = -0.25, sizeFactor = 1.5;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            for (const particle of particles) {\n                this._pool.push(particle);\n            }\n        };\n        this._applyDensity = async (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, minLimit = 0, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                await this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container, defaultFactor = 1;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = async (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    const { Particle } = await import(\"./Particle.js\");\n                    particle = new Particle(this._engine, this._container);\n                }\n                await particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle), deleteCount = 1;\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    async addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            await this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    async addParticle(position, overrideOptions, group, initializer) {\n        const limitOptions = this._container.actualOptions.particles.number.limit, limit = group === undefined ? this._limit : this._groupLimits.get(group) ?? this._limit, currentCount = this.count, minLimit = 0;\n        if (limit > minLimit) {\n            if (limitOptions.mode === \"delete\") {\n                const countOffset = 1, minCount = 0, countToRemove = currentCount + countOffset - limit;\n                if (countToRemove > minCount) {\n                    this.removeQuantity(countToRemove);\n                }\n            }\n            else if (limitOptions.mode === \"wait\") {\n                if (currentCount >= limit) {\n                    return;\n                }\n            }\n        }\n        return await this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            await canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            await p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        await this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    await this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                await this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            await pathGenerator.init(container);\n        }\n    }\n    async push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            await this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        const minIndex = 0;\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i--, group, override)) {\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        const defaultIndex = 0;\n        this.removeAt(defaultIndex, quantity, group);\n    }\n    async setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups, manualCount = 0;\n        for (const group in groups) {\n            await this._applyDensity(groups[group], manualCount, group);\n        }\n        await this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            await plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    await mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(\"particleRemoved\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                await updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            const lengthOffset = 1;\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nconst defaultRatio = 1, defaultReduceFactor = 1;\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nconst defaultFps = 60;\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver((entries) => this._intersectionManager(entries));\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            }, radius = 1;\n            clickOrTouchHandler(e, pos, radius);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                const lengthOffset = 1;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - lengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, minCoordinate = 0, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, effectDrawer] of this.effectDrawers) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const [, shapeDrawer] of this.shapeDrawers) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this), minIndex = 0;\n        if (idx >= minIndex) {\n            const deleteCount = 1;\n            mainArr.splice(idx, deleteCount);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = async (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = requestAnimationFrame((timestamp) => void frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(this.actualOptions.delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        const defaultFpsLimit = 120, minFpsLimit = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > minFpsLimit ? this.actualOptions.fpsLimit : defaultFpsLimit;\n        this._smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.effectDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, drawer] of this.shapeDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, plugin] of this.plugins) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        await this.particles.init();\n        await this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n"],"names":["setTransformValue","factor","newFactor","key","newValue","_factor$key","undefined","setStyle","canvas","style","important","arguments","length","elementStyle","value","setProperty","Canvas","constructor","container","this","_applyPostDrawUpdaters","particle","updater","_postDrawUpdaters","_updater$afterDraw","afterDraw","call","_applyPreDrawUpdaters","ctx","radius","zOpacity","colorStyles","transform","_preDrawUpdaters","_updater$beforeDraw","getColorStyles","fill","stroke","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","plugin","_resizePlugins","_plugin$resize","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","rangeColorToHsl","particleStrokeColor","_initCover","async","cover","actualOptions","backgroundMask","color","coverRgb","rangeColorToRgb","coverColor","a","opacity","_coverColorStyle","getStyleFromRgb","Promise","resolve","reject","image","img","document","createElement","addEventListener","_coverImage","evt","error","src","_initStyle","element","options","_fullScreen","_originalStyle","deepExtend","_setFullScreenStyle","_resetOriginalStyle","_initTrail","trail","particles","move","trailFill","enable","fillColor","_trailFill","_paintBase","baseColor","draw","paintBase","size","_paintImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","callback","_mutationObserver","position","zIndex","fullScreen","toString","top","left","width","height","_context","_generated","clear","paint","destroy","stop","remove","cb","drawAsync","delta","_particle$getStrokeCo","spawning","destroyed","getRadius","pfColor","getFillColor","psColor","getStrokeColor","_ref","_particle$bubble$opac","_particle$opacity","_particle$strokeOpaci","zIndexOptions","zIndexFactor","zOpacityFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","getStyleFromHsl","drawParticle","context","composite","sizeRate","shadow","drawParticlePlugin","drawPlugin","obs","safeMutationObserver","records","record","type","attributeName","e","getLogger","initUpdaters","initPlugins","background","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","_plugin$particleFillC","push","updaters","_ref2","_updater$getColorStyl","loadCanvas","dataset","generatedAttribute","ariaHidden","offsetHeight","offsetWidth","getContext","retina","init","pxRatio","pixelRatio","newSize","oldSize","started","setResizeFactor","needsRefresh","updateActualOptions","setDensity","refresh","manageListener","event","handler","add","addOptions","passive","isBoolean","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","onClick","events","executeOnSingleOrMultiple","mode","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","matches","dark","light","theme","themes","find","name","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","animationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","handleResize","windowResize","delay","millisecondsToSeconds","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMoveEvent","mouseMove","touchStartEvent","touchStart","touchMoveEvent","touchMove","touchEndEvent","touchEndClick","mouseUpEvent","mouseUp","mouseDownEvent","mouseDown","touchEnd","mouseLeave","touchCancelEvent","touchCancel","_manageListeners","detectType","detectsOn","mouseLeaveEvent","window","mouseOutEvent","_canvasEl$parentEleme","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChangeEvent","visibilityChange","mediaMatch","safeMatchMedia","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","resizeEvent","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","inside","handled","mousePosition","clickPositionValid","status","_mouseTouchMove","pos","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","y","clientY","source","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","_mouseEvent$offsetX","_mouseEvent$offsetY","_mouseEvent$offsetX2","_mouseEvent$offsetY2","_canvasRect$left","_canvasRect$top","touchEvent","lengthOffset","lastTouch","touches","defaultCoordinate","_touchEnd","Array","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","set","performance","now","Map","addListeners","removeListeners","InteractionManager","engine","_engine","_interactors","_externalInteractors","_particleInteractors","interactor","isEnabled","interact","_interactor$handleCli","getInteractors","reset","Point","half","QuadTree","rectangle","capacity","_subdivide","i","fixedIndex","_subs","Rectangle","Math","round","_divided","_points","insert","point","contains","some","sub","query","range","check","res","intersects","p","getDistance","queryCircle","Circle","queryRectangle","qTreeRectangle","canvasSize","Particles","_this","_addToPool","_len","_key","_pool","_applyDensity","manualCount","group","_options$number$densi","numberOptions","number","density","_limit","limit","_groupLimits","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","min","particlesCount","count","filter","t","abs","removeQuantity","densityOptions","_container","_pushParticle","overrideOptions","initializer","pop","Particle","_nextId","canAdd","_array","_zArray","dispatchEvent","data","warning","concat","errorPrefix","_removeParticle","index","override","zIdx","indexOf","splice","_needsSort","_lastZIndex","_interactionManager","_pluginsInitialized","quadTree","movers","manualParticles","addParticle","getPosition","_this$_groupLimits$ge","limitOptions","get","currentCount","countToRemove","update","condition","particlesInitialization","addManualParticles","particlesOptions","groups","groupOptions","j","_groupOptions$number","getMovers","getUpdaters","pathGenerator","pathGenerators","nb","removeAt","quantity","deleted","setLastZIndex","_resizeFactor","particlesToDelete","Set","_plugin$update","resizeFactor","ignoresResizeRatio","initialPosition","_plugin$particleUpdat","particleUpdate","mover","checkDelete","has","externalInteract","particlesInteract","zArray","sort","b","z","id","Retina","reduceFactor","detectRetina","isSsr","devicePixelRatio","ratio","moveOptions","maxSpeed","getRangeValue","gravity","sizeAnimationSpeed","animation","speed","initParticle","moveDistance","distance","props","moveDrift","drift","moveSpeed","maxDistance","horizontal","vertical","guardCheck","defaultFps","loadContainerOptions","Options","sourceOptionsArr","loadOptions","Container","sourceOptions","_intersectionManager","pauseOnOutsideViewport","entry","isIntersecting","_nextFrame","_this$_lastFrameTime","_smooth","_lastFrameTime","timestamp","fpsLimit","initDelta","addLifeTime","alive","Symbol","_delay","_duration","_lifeTime","_firstStart","_paused","zLayers","_sourceOptions","_initialSourceOptions","effectDrawers","shapeDrawers","_options","_eventListeners","_intersectionObserver","safeIntersectionObserver","addClickHandler","el","clickOrTouchHandler","posRetina","touched","touchMoved","touchStartHandler","touchMoveHandler","minCoordinate","max","radiusX","radiusY","touchCancelHandler","addPath","generator","effectDrawer","_effectDrawer$destroy","shapeDrawer","_shapeDrawer$destroy","keys","clearPlugins","mainArr","dom","idx","findIndex","deleteCount","force","refreshTime","frame","_drawAnimationFrame","requestAnimationFrame","export","supported","blob","_plugin$handleClickMo","effects","getSupportedEffects","drawer","getEffectDrawer","shapes","getSupportedShapes","getShapeDrawer","availablePlugins","getAvailablePlugins","duration","smooth","_drawer$init","_drawer$init2","_plugin$init","_plugin$particlesSetu","particlesSetup","_currentTheme","cancelAnimationFrame","_plugin$pause","needsUpdate","autoPlay","start","HTMLElement","_plugin$start","_delayTimeout","_plugin$stop","responsive","newMaxWidth","setResponsive","setTheme","_responsiveMaxWidth"],"sourceRoot":""}