{"version":3,"file":"static/js/8642.72b43fa2.chunk.js","mappings":"2JAAA,MAAMA,EAAeA,CAACC,EAAUC,IACpBD,EAASE,UAAYD,GACzBD,EAASG,SAAWF,GACpBD,EAASI,OAASH,GAClBD,EAASK,QAAUJ,GACnBD,EAASM,MAAQL,EAElB,MAAMM,EACTC,YAAYC,GACRC,KAAKC,eAAiBC,MAAOC,EAAUC,EAAOb,EAASc,KACnD,IAAK,MAAMC,KAAWN,KAAKO,eACjBD,EAAQE,OAAOL,EAAUE,EAAWD,EAAOb,EACrD,EAEJS,KAAKD,UAAYA,EACjBC,KAAKO,SAAW,EACpB,CACAL,WAAWC,GACPH,KAAKO,SAAW,GAChB,MAAMjB,EAAWa,EAASM,QAAQC,KAAKpB,SACvC,GAAID,EAAaC,EAAU,UAAW,CAClC,MAAM,cAAEqB,SAAwB,+BAChCX,KAAKO,SAASK,KAAK,IAAID,EAAcX,KAAKD,WAC9C,MACK,GAAIV,EAAaC,EAAU,OAAQ,CACpC,MAAM,WAAEuB,SAAqB,+BAC7Bb,KAAKO,SAASK,KAAK,IAAIC,EAAWb,KAAKD,WAC3C,MACK,GAAIV,EAAaC,EAAU,WAAY,CACxC,MAAM,eAAEwB,SAAyB,+BACjCd,KAAKO,SAASK,KAAK,IAAIE,EAAed,KAAKD,WAC/C,MACK,GAAIV,EAAaC,EAAU,QAAS,CACrC,MAAM,YAAEyB,SAAsB,+BAC9Bf,KAAKO,SAASK,KAAK,IAAIG,EAAYf,KAAKD,WAC5C,CACJ,CACAiB,UAAUb,GACN,OAAQA,EAASc,YAAcd,EAASe,QAC5C,CACAhB,aAAaC,EAAUC,GAAO,IAAAe,EAAAC,EAAAC,EAAAC,EAC1B,MAAMhC,EAAWa,EAASM,QAAQC,KAAKpB,eACjCU,KAAKC,eAAeE,EAAUC,EAAsB,QAAjBe,EAAE7B,EAASG,cAAM,IAAA0B,EAAAA,EAAI7B,EAASE,QAAS,gBAC1EQ,KAAKC,eAAeE,EAAUC,EAAoB,QAAfgB,EAAE9B,EAASI,YAAI,IAAA0B,EAAAA,EAAI9B,EAASE,QAAS,cACxEQ,KAAKC,eAAeE,EAAUC,EAAqB,QAAhBiB,EAAE/B,EAASK,aAAK,IAAA0B,EAAAA,EAAI/B,EAASE,QAAS,eACzEQ,KAAKC,eAAeE,EAAUC,EAAmB,QAAdkB,EAAEhC,EAASM,WAAG,IAAA0B,EAAAA,EAAIhC,EAASE,QAAS,MACjF,E","sources":["../node_modules/@tsparticles/updater-out-modes/browser/OutOfCanvasUpdater.js"],"sourcesContent":["const checkOutMode = (outModes, outMode) => {\n    return (outModes.default === outMode ||\n        outModes.bottom === outMode ||\n        outModes.left === outMode ||\n        outModes.right === outMode ||\n        outModes.top === outMode);\n};\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this._updateOutMode = async (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters) {\n                await updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.container = container;\n        this.updaters = [];\n    }\n    async init(particle) {\n        this.updaters = [];\n        const outModes = particle.options.move.outModes;\n        if (checkOutMode(outModes, \"bounce\")) {\n            const { BounceOutMode } = await import(\"./BounceOutMode.js\");\n            this.updaters.push(new BounceOutMode(this.container));\n        }\n        else if (checkOutMode(outModes, \"out\")) {\n            const { OutOutMode } = await import(\"./OutOutMode.js\");\n            this.updaters.push(new OutOutMode(this.container));\n        }\n        else if (checkOutMode(outModes, \"destroy\")) {\n            const { DestroyOutMode } = await import(\"./DestroyOutMode.js\");\n            this.updaters.push(new DestroyOutMode(this.container));\n        }\n        else if (checkOutMode(outModes, \"none\")) {\n            const { NoneOutMode } = await import(\"./NoneOutMode.js\");\n            this.updaters.push(new NoneOutMode(this.container));\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    async update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        await this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, \"bottom\");\n        await this._updateOutMode(particle, delta, outModes.left ?? outModes.default, \"left\");\n        await this._updateOutMode(particle, delta, outModes.right ?? outModes.default, \"right\");\n        await this._updateOutMode(particle, delta, outModes.top ?? outModes.default, \"top\");\n    }\n}\n"],"names":["checkOutMode","outModes","outMode","default","bottom","left","right","top","OutOfCanvasUpdater","constructor","container","this","_updateOutMode","async","particle","delta","direction","updater","updaters","update","options","move","BounceOutMode","push","OutOutMode","DestroyOutMode","NoneOutMode","isEnabled","destroyed","spawning","_outModes$bottom","_outModes$left","_outModes$right","_outModes$top"],"sourceRoot":""}