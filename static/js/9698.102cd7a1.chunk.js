"use strict";(self.webpackChunkportfolio_react=self.webpackChunkportfolio_react||[]).push([[9698],{740:(a,e,t)=>{t.r(e),t.d(e,{TextDrawer:()=>n,validTypes:()=>s});var i=t(4709);const s=["text","character","char","multiline-text"];class n{async draw(a){const{drawText:e}=await t.e(6080).then(t.bind(t,6080));e(a)}async init(a){const e=a.actualOptions;if(s.find((a=>(0,i.dB)(a,e.particles.shape.type)))){const a=s.map((a=>e.particles.shape.options[a])).find((a=>!!a)),t=[];(0,i.KH)(a,(a=>{t.push((0,i.mx)(a.font,a.weight))})),await Promise.all(t)}}async particleInit(a,e){if(!e.shape||!s.includes(e.shape))return;const t=e.shapeData;if(void 0===t)return;const n=t.value;void 0!==n&&(e.text=(0,i.wA)(n,e.randomIndexData),await Promise.resolve())}}},9698:(a,e,t)=>{t.r(e),t.d(e,{loadTextShape:()=>s});var i=t(740);async function s(a){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const{TextDrawer:s}=await Promise.resolve().then(t.bind(t,740));await a.addShape(i.validTypes,new s,e)}}}]);
//# sourceMappingURL=9698.102cd7a1.chunk.js.map