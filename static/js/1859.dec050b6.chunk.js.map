{"version":3,"file":"static/js/1859.dec050b6.chunk.js","mappings":"uKAGO,MAAMA,UAAeC,EAAAA,GACxBC,YAAYC,GACRC,MAAMD,EACV,CACAE,MAAMC,EAAUC,EAAOC,GACfF,EAASG,KAAKC,UAAYF,IAG9BF,EAASG,KAAKE,OAAS,EAC3B,CACAC,OACI,MAAMT,EAAYU,KAAKV,UAAWM,EAAON,EAAUW,cAAcC,cAAcC,MAAMP,KAChFA,IAGLN,EAAUc,OAAOC,eAAiBT,EAAKU,OAAShB,EAAUc,OAAOG,WACrE,CACAC,iBACA,CACAC,UAAUhB,GAAU,IAAAiB,EAChB,MAAMpB,EAAYU,KAAKV,UAAWqB,EAAQrB,EAAUY,cAAcS,MAAOC,GAAiC,QAAxBF,EAAS,OAARjB,QAAQ,IAARA,OAAQ,EAARA,EAAUS,qBAAa,IAAAQ,EAAAA,EAAIpB,EAAUW,cAAcC,eAAeU,OACrJ,OAAOA,EAAOC,QAAQC,UAAYH,EAAMI,WAAYC,EAAAA,EAAAA,IAtB3C,OAsB+DJ,EAAOC,QAAQI,KAC3F,CACAC,gBAAgBC,GACPA,EAAQvB,OACTuB,EAAQvB,KAAO,IAAIwB,EAAAA,GACtB,QAAAC,EAAAC,UAAAC,OAHuBC,EAAO,IAAAC,MAAAJ,EAAA,EAAAA,EAAA,KAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAPF,EAAOE,EAAA,GAAAJ,UAAAI,GAI/B,IAAK,MAAMC,KAAUH,EACjBL,EAAQvB,KAAKgC,KAAW,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQ/B,KAElC,CACAiC,MAAMpC,GACFA,EAASG,KAAKC,SAAU,EACxB,MAAMP,EAAYU,KAAKV,UAAW6B,EAAU7B,EAAUW,cAAe6B,EAAWxC,EAAUY,cAAcS,MAAMI,SAAUT,EAAShB,EAAUc,OAAOC,eAAgB0B,EAAcZ,EAAQjB,cAAcC,MAAMP,KAC5M,IAAKmC,IAAgBzB,GAAUA,EAnCF,IAmCyBwB,EAClD,OAEJ,MAAME,EAAcvC,EAASwC,cAAeC,GAAOC,EAAAA,EAAAA,IAAYL,EAAUE,GAAcI,EAAkBF,EAAO5B,EAAQ+B,EAAaN,EAAYjC,QAAQ,KAAEF,GAASH,EAChKyC,EAAO5B,IAGXV,EAAKC,SAAU,EACfD,EAAKE,OAASsC,EAAkBC,EACpC,E","sources":["../node_modules/@tsparticles/interaction-external-slow/browser/Slower.js"],"sourcesContent":["import { ExternalInteractorBase, getDistance, isInArray, } from \"@tsparticles/engine\";\nimport { Slow } from \"./Options/Classes/Slow.js\";\nconst slowMode = \"slow\", minRadius = 0;\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(slowMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < minRadius || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n"],"names":["Slower","ExternalInteractorBase","constructor","container","super","clear","particle","delta","force","slow","inRange","factor","init","this","actualOptions","interactivity","modes","retina","slowModeRadius","radius","pixelRatio","async","isEnabled","_particle$interactivi","mouse","events","onHover","enable","position","isInArray","mode","loadModeOptions","options","Slow","_len","arguments","length","sources","Array","_key","source","load","reset","mousePos","slowOptions","particlePos","getPosition","dist","getDistance","proximityFactor","slowFactor"],"sourceRoot":""}